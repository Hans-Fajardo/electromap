import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

const LoginForm = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isHiddenPassword, setIsHiddenPassword] = useState(true);
  const [focusedInput, setFocusedInput] = useState(null);
  const navigate = useNavigate();

  const handleLogin = (e) => {
    e.preventDefault(); // Prevent the default form submission
    // Simulate successful login by saving auth token
    if (email && password) {
      localStorage.setItem("authToken", "YourTokenHere");
      navigate("/explore");
    } else {
      alert("Please enter both email and password.");
    }
  };

  return (
    <form onSubmit={handleLogin}>
      <div
        className={`inputContainer ${
          focusedInput === "email" ? "focused" : ""
        }`}
        onClick={() => document.getElementById("emailInput").focus()}
      >
        <label htmlFor="email">Email</label>
        <input
          id="emailInput"
          type="email"
          name="email"
          placeholder="test@email.com"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          onFocus={() => setFocusedInput("email")}
          onBlur={() => setFocusedInput(null)}
        />
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
          <path
            d="M15.9608 3.44877C15.8943 3.1127 15.7444 2.79508 15.5256 2.52805C15.4812 2.47198 15.4347 2.42211 15.3839 2.37152C14.9947 1.98027 14.4533 1.75586 13.8986 1.75586H2.10138C1.54041 1.75586 1.01281 1.97461 0.615781 2.37173C0.565531 2.42186 0.518938 2.47223 0.472813 2.53008C0.255 2.79598 0.105719 3.11317 0.0408125 3.4497C0.0136875 3.58186 0 3.7188 0 3.85733V12.1429C0 12.4311 0.0585625 12.7118 0.174656 12.9786C0.275125 13.2156 0.427563 13.4403 0.615656 13.6283C0.663031 13.6754 0.710094 13.7189 0.760344 13.7613C1.13641 14.0728 1.61259 14.2441 2.10138 14.2441H13.8986C14.3905 14.2441 14.8662 14.0721 15.2413 13.7579C15.2914 13.7173 15.3379 13.6747 15.3843 13.6283C15.5662 13.4466 15.7107 13.238 15.8145 13.0078L15.8282 12.975C15.9422 12.7132 16 12.4335 16 12.1429V3.85733C16 3.72061 15.9868 3.58277 15.9608 3.44877ZM1.08822 3.09698C1.11794 3.05348 1.15587 3.00883 1.20428 2.96005C1.44456 2.71989 1.76322 2.58773 2.10134 2.58773H13.8985C14.2396 2.58773 14.5584 2.72011 14.796 2.96052C14.837 3.00198 14.8762 3.04802 14.9104 3.09402L15.0006 3.21527L8.70375 8.70327C8.50962 8.87345 8.25969 8.96711 7.99991 8.96711C7.74269 8.96711 7.49297 8.87367 7.29653 8.70348L1.00594 3.21683L1.08822 3.09698ZM0.836094 12.216C0.832687 12.1935 0.831906 12.1684 0.831906 12.1429V4.02889L5.71847 8.29173L0.881219 12.5093L0.836094 12.216ZM14.5281 13.245C14.339 13.3541 14.1212 13.412 13.8986 13.412H2.10138C1.87866 13.412 1.66094 13.3541 1.47194 13.245L1.27419 13.1304L6.27219 8.77477L6.81994 9.2512C7.1485 9.53645 7.5675 9.6937 7.99997 9.6937C8.43403 9.6937 8.85372 9.53645 9.18206 9.2512L9.72959 8.77455L14.7259 13.1306L14.5281 13.245ZM15.1679 12.1429C15.1679 12.168 15.1674 12.1928 15.1643 12.2149L15.1209 12.5109L10.2816 8.29402L15.1679 4.03095V12.1429Z"
            fill="#83A3B1"
          />
        </svg>
      </div>

      <div
        className={`inputContainer ${
          focusedInput === "password" ? "focused" : ""
        }`}
        onClick={() => document.getElementById("passwordInput").focus()}
      >
        <label htmlFor="password">Password</label>
        <input
          id="passwordInput"
          type="password"
          name="password"
          placeholder="password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          onFocus={() => setFocusedInput("password")}
          onBlur={() => setFocusedInput(null)}
        />

        {/* {isHiddenPassword ? (
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            onClick={() => setIsHiddenPassword(false)}
          >
            <path
              d="M1.79271 4.46967C1.68393 4.21586 1.38999 4.09828 1.13618 4.20706C0.882364 4.31584 0.764784 4.60978 0.873564 4.86359L1.79271 4.46967ZM6.02744 9.15843C6.17804 8.92703 6.1125 8.6173 5.88104 8.4667C5.64958 8.3161 5.33986 8.38163 5.18925 8.6131L6.02744 9.15843ZM4.24738 10.0606C4.09677 10.292 4.16232 10.6018 4.39378 10.7524C4.62524 10.903 4.93496 10.8374 5.08556 10.606L4.24738 10.0606ZM15.1261 4.86359C15.2348 4.60978 15.1173 4.31584 14.8634 4.20706C14.6096 4.09828 14.3157 4.21586 14.2069 4.46967L15.1261 4.86359ZM13.3129 8.77277C13.5082 8.96803 13.8247 8.96803 14.02 8.77277C14.2153 8.5775 14.2153 8.2609 14.02 8.06563L13.3129 8.77277ZM7.4998 11C7.4998 11.2761 7.72367 11.5 7.9998 11.5C8.27594 11.5 8.4998 11.2761 8.4998 11H7.4998ZM10.9141 10.606C11.0647 10.8374 11.3744 10.903 11.6058 10.7524C11.8373 10.6018 11.9028 10.292 11.7522 10.0606L10.9141 10.606ZM3.68669 7.77277C3.88195 7.5775 3.88195 7.2609 3.68669 7.06563C3.49143 6.87037 3.17484 6.87037 2.97958 7.06563L3.68669 7.77277ZM1.97958 8.06563C1.78432 8.2609 1.78432 8.5775 1.97958 8.77277C2.17484 8.96803 2.49143 8.96803 2.68669 8.77277L1.97958 8.06563ZM7.9998 8.8333C5.85054 8.8333 4.30736 7.76303 3.28287 6.65974C2.77077 6.10825 2.3953 5.55519 2.1482 5.14006C2.02493 4.93297 1.93438 4.76151 1.8754 4.64355C1.84593 4.58461 1.8244 4.53913 1.81065 4.50937C1.80378 4.4945 1.79886 4.48357 1.79588 4.47685C1.79438 4.4735 1.79324 4.47088 1.79271 4.46967C1.7927 4.46965 1.79273 4.46973 1.79271 4.46967C1.79278 4.46983 1.79271 4.46967 1.33314 4.66663C0.873564 4.86359 0.873464 4.86337 0.873564 4.86359C0.873604 4.86369 0.873897 4.86437 0.873984 4.86457C0.874151 4.86496 0.874358 4.86543 0.874591 4.86597C0.875051 4.86705 0.875644 4.86841 0.876357 4.87005C0.877791 4.87332 0.879724 4.87771 0.882157 4.88319C0.887024 4.89413 0.893904 4.9094 0.902824 4.92871C0.920651 4.96731 0.946644 5.0221 0.980977 5.09076C1.0496 5.22801 1.15176 5.42113 1.28891 5.65154C1.56264 6.11141 1.97884 6.72503 2.55007 7.34017C3.69225 8.57023 5.4824 9.8333 7.9998 9.8333V8.8333ZM10.2081 8.4205C9.5612 8.67517 8.8276 8.8333 7.9998 8.8333V9.8333C8.9586 9.8333 9.8162 9.64943 10.5744 9.35103L10.2081 8.4205ZM5.18925 8.6131L4.24738 10.0606L5.08556 10.606L6.02744 9.15843L5.18925 8.6131ZM14.6665 4.66663C14.2069 4.46967 14.2068 4.46977 14.2069 4.46967C14.2069 4.46957 14.2072 4.46896 14.2072 4.46903C14.2071 4.46917 14.2069 4.46965 14.2065 4.47047C14.2058 4.47212 14.2045 4.47513 14.2025 4.47946C14.1987 4.48812 14.1924 4.50203 14.1837 4.5208C14.1661 4.55835 14.1389 4.61527 14.1015 4.68841C14.0269 4.83481 13.9125 5.04551 13.7567 5.29543C13.4444 5.79674 12.9707 6.44795 12.3243 7.05463L13.0087 7.78377C13.7347 7.1023 14.2609 6.37721 14.6055 5.82427C14.7782 5.54709 14.9065 5.31117 14.9924 5.14273C15.0353 5.05847 15.0678 4.99092 15.09 4.94335C15.1011 4.91956 15.1096 4.90075 15.1156 4.88733C15.1186 4.88061 15.121 4.87525 15.1227 4.87127C15.1236 4.86929 15.1243 4.86765 15.1249 4.86637C15.1251 4.86573 15.1253 4.86517 15.1255 4.86471C15.1257 4.86448 15.126 4.86378 15.1261 4.86359C15.1261 4.86364 15.1261 4.8635 15.1261 4.86359C15.1261 4.86348 15.1261 4.86359 14.6665 4.66663ZM12.3243 7.05463C11.7516 7.5921 11.0491 8.0895 10.2081 8.4205L10.5744 9.35103C11.5568 8.96437 12.3642 8.38863 13.0087 7.78377L12.3243 7.05463ZM12.3129 7.77277L13.3129 8.77277L14.02 8.06563L13.02 7.06563L12.3129 7.77277ZM7.4998 9.3333V11H8.4998V9.3333H7.4998ZM9.9722 9.15843L10.9141 10.606L11.7522 10.0606L10.8103 8.6131L9.9722 9.15843ZM2.97958 7.06563L1.97958 8.06563L2.68669 8.77277L3.68669 7.77277L2.97958 7.06563Z"
              fill="#83A3B1"
            />
          </svg>
        ) : (
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            onClick={() => setIsHiddenPassword(true)}
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M8 5.5C6.61929 5.5 5.5 6.61929 5.5 8C5.5 9.38073 6.61929 10.5 8 10.5C9.38073 10.5 10.5 9.38073 10.5 8C10.5 6.61929 9.38073 5.5 8 5.5ZM6.5 8C6.5 7.1716 7.1716 6.5 8 6.5C8.8284 6.5 9.5 7.1716 9.5 8C9.5 8.8284 8.8284 9.5 8 9.5C7.1716 9.5 6.5 8.8284 6.5 8Z"
              fill="#83A3B1"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M8.00016 2.16663C4.99074 2.16663 2.96369 3.96943 1.78721 5.49787L1.76599 5.52543C1.49992 5.87098 1.25487 6.18924 1.08862 6.56556C0.910589 6.96856 0.833496 7.40776 0.833496 7.99996C0.833496 8.59216 0.910589 9.03136 1.08862 9.43436C1.25487 9.81069 1.49992 10.129 1.766 10.4745L1.78721 10.502C2.96369 12.0305 4.99074 13.8333 8.00016 13.8333C11.0096 13.8333 13.0366 12.0305 14.2131 10.502L14.2343 10.4745C14.5004 10.129 14.7454 9.81069 14.9117 9.43436C15.0898 9.03136 15.1668 8.59216 15.1668 7.99996C15.1668 7.40776 15.0898 6.96856 14.9117 6.56556C14.7454 6.18923 14.5004 5.87097 14.2343 5.52541L14.2131 5.49787C13.0366 3.96943 11.0096 2.16663 8.00016 2.16663ZM2.57964 6.10783C3.66592 4.69657 5.43374 3.16663 8.00016 3.16663C10.5666 3.16663 12.3344 4.69657 13.4207 6.10783C13.7131 6.48769 13.8844 6.71469 13.997 6.96963C14.1023 7.20796 14.1668 7.49923 14.1668 7.99996C14.1668 8.50069 14.1023 8.79196 13.997 9.03029C13.8844 9.28523 13.7131 9.51223 13.4207 9.89209C12.3344 11.3034 10.5666 12.8333 8.00016 12.8333C5.43374 12.8333 3.66592 11.3034 2.57964 9.89209C2.28726 9.51223 2.11599 9.28523 2.00334 9.03029C1.89806 8.79196 1.8335 8.50069 1.8335 7.99996C1.8335 7.49923 1.89806 7.20796 2.00334 6.96963C2.11599 6.71469 2.28725 6.48769 2.57964 6.10783Z"
              fill="#83A3B1"
            />
          </svg>
        )} */}
      </div>

      <button type="submit">Login</button>
    </form>
  );
};

export default LoginForm;
